<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.UserDao">
    <select id="countUser" resultType="Integer">
        SELECT count(0)
        FROM sys_user u
        WHERE u.delete_status = 'F'
    </select>

    <resultMap id="userMap" type="com.heeexy.example.util.model.One2Many">
        <id column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <result column="salt" property="salt"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="lastLoginTime" property="lastLoginTime"/>
        <result column="deleteStatus" property="deleteStatus"/>
        <collection property="permissionList" ofType="String">
            <id column="permissionName" property="permissionName"/>
        </collection>
    </resultMap>
    
    <select id="listUser" resultMap="userMap">
        SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     salt                           salt,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE delete_status = 'F'
                 ORDER BY id
                 LIMIT #{offSet}, #{pageRow}
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId
    </select>

    <select id="getAllRoles" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE delete_status='F'
    </select>

    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user
        (username, salt, password, nickname, role_id) VALUES
            (#{username}, #{salt}, #{password}, #{nickname}, #{roleId})
    </insert>

    <update id="updateUser">
        UPDATE sys_user
        SET
        nickname = #{nickname}
        <if test="password !='' and password !=null">
            , password = #{password}
        </if>

        , role_id = #{roleId}
        WHERE id = #{userId}
    </update>
    
	<update id="removeUser">
        UPDATE sys_user
        SET
            delete_status = 'T'
        WHERE id = #{userId} and username != 'admin'
    </update>
    
    <resultMap id="roleMap" type="com.heeexy.example.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
        <collection property="menus" ofType="com.heeexy.example.util.model.One2Many">
            <id column="menuCode" property="menuCode"/>
            <result column="menuName" property="menuName"/>
            <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
                <id column="permissionId" property="permissionId"/>
                <result column="permissionName" property="permissionName"/>
            </collection>
        </collection>
    </resultMap>
    
    <select id="listRole" resultMap="roleMap">
        SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.menu_code       menuCode,
            p.menu_name       menuName,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = 'F'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = 'F'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.delete_status = 'F'
        ORDER BY r.id, p.id
    </select>
    
    <select id="countRole" resultType="java.lang.Integer">
    	select count(0) from sys_role where delete_status = 'F'
    </select>
    
    <resultMap id="permissionMap" type="com.heeexy.example.util.model.One2Many">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm"/>
        </collection>
    </resultMap>
    <select id="listAllPermission" resultMap="permissionMap">
        SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p
        WHERE delete_status = 'F'
    </select>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO sys_role
        (role_name)
        VALUES (#{roleName})
    </insert>

    <insert id="insertRolePermission">
        insert into sys_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <resultMap id="aRole" type="com.heeexy.example.util.model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>
    
    <select id="getRoleAllInfo" resultMap="aRole">
        SELECT
            r.id        roleId,
            r.role_name roleName,
            u.id        userId,
            p.id        permissionId
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.delete_status = 'F'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.delete_status = 'F'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>

    <update id="removeRole">
        UPDATE sys_role
        SET
            delete_status = 'T'
        WHERE id = #{roleId} and id !=1
    </update>
    
    <update id="removeRoleAllPermission">
        UPDATE sys_role_permission
        SET
            delete_status = 'T'
        WHERE role_id = #{roleId}
    </update>

    <update id="removeOldPermission">
        UPDATE sys_role_permission
        SET
        delete_status = 'T'
        WHERE role_id = #{roleId}
        AND permission_id in (
        <foreach collection="permissions" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>
    
    <update id="updateRoleName">
        UPDATE sys_role
        SET
            role_name = #{roleName}
        WHERE id = #{roleId}
    </update>
    
    <select id="queryExistUsername" resultType="int">
        select count(0)
         from sys_user
         WHERE username=#{username}
         AND delete_status='F';
    </select>
    
	<resultMap id="permMap" type="com.heeexy.example.util.model.One2Many">
		<id column="permissionId" property="permissionId"/>
		<result column="menuCode" property="menuCode"/>
		<result column="menuName" property="menuName"/>
		<result column="permissionCode" property="permissionCode"/>
		<result column="permissionName" property="permissionName"/>
		<result column="requiredPermission" property="requiredPermission"/>
        <collection property="roles" ofType="com.alibaba.fastjson.JSONObject">
            <id column="roleId" property="roleId"/>
            <result column="roleName" property="roleName"/>
        </collection>
    </resultMap>
    
	<select id="listPermission" resultMap="permMap">
		SELECT p.*, rp.role_id roleId, r.role_name roleName from 
		(SELECT
            id              						permissionId,
            menu_code       				menuCode,
            menu_name       			menuName,
            permission_code 			permissionCode,
            permission_name		 	permissionName,
            required_permission 	requiredPermission
        FROM sys_permission 
        WHERE delete_status = 'F' 
        ORDER BY permissionId
        LIMIT #{offSet}, #{pageRow}) p
		LEFT JOIN sys_role_permission rp ON p.permissionId = rp.permission_id AND rp.delete_status = 'F'
		LEFT JOIN sys_role r ON rp.role_id = r.id AND r.delete_status = 'F'        
    </select>
    
	<select id="countPermission" resultType="java.lang.Integer">
        SELECT count(1)
        FROM sys_permission 
        WHERE delete_status = 'F'
    </select>
    
	<insert id="insertPermission" useGeneratedKeys="true" keyProperty="permissionId">
        INSERT INTO sys_permission
        (menu_code, menu_name, permission_code, permission_name, required_permission) VALUES
            (#{menuCode}, #{menuName}, #{permissionCode}, #{permissionName}, #{requiredPermission})
    </insert>
    
	<update id="updatePermission" parameterType="com.alibaba.fastjson.JSONObject">
        UPDATE sys_permission
        SET
            menu_code = #{menuCode},
            menu_name = #{menuName},
            permission_code = #{permissionCode},
            permission_name = #{permissionName},
            required_permission = #{requiredPermission}
        WHERE id = #{permissionId}
    </update>
    
    <update id="removePermission">
    	update sys_permission set delete_status = 'T' where id = #{permissionId}
    </update>
    
    <select id="selectByUserName" resultType="com.alibaba.fastjson.JSONObject">
    	select salt from sys_user where username = #{username}
    </select>
</mapper>